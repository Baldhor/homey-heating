{"version":3,"sources":["webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./api/settings/index.tsx","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:///./pages/schedules.tsx"],"names":["callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","planCopy","zones","length","undefined","devices","id","planAPI","fetchPlans","res","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","position","color","className","variant","noWrap","createLink","innerRef","to","toString","match","onClick","openURL","component","theme","text","padding","spacing","unit","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","elements","type","gutterBottom","map","e","key","disabled","url","otherProps","root","webkitOverflowScrolling","flexFlow","height","width","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","paddingLeft","paddingRight","headline","marginTop","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","settingsAPI","fetchSettings","updateSettings","settings","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","get","state","setState","failed","setFailed","loadValue","force","set","apiMethod","setStateAction","tryMethod","r","console","log","catch","delete","charAt","toUpperCase","slice","usePlans","useDevices","useZones","useScheduleInformation","useSettings","useMode","Chart","lazy","list","marginBottom","plans"],"mappings":"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","file":"13.js","sourcesContent":["export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    // @ts-ignore\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        function loadValue(force: boolean = false) {\n            if (cache.get(name) == null || force) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        // tslint:disable-next-line: no-console\n                        console.log(\"Cache updated\", name, r);\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        loadValue();\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans(force?: boolean): HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport { withSnackbar, WithSnackbarProps } from \"notistack\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport { usePlans } from \"../api/hooks\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport { AppMenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\nconst Chart = React.lazy(() => import(\"../components/TemperatureChart\"));\n\nconst styles: StyleRulesCallback = (theme) => ({\n    list: {\n        marginTop: 0,\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = WithStyles<typeof styles> & RouteComponentProps & WithSnackbarProps;\n\nconst SchedulesPage: React.FunctionComponent<Props> = (_props) => {\n    const { plans } = usePlans();\n\n    return (\n        <Page>\n            {{\n                header: (<AppHeader title={translate(\"menu.schedules\")} button={<AppMenuButton />} />),\n                paddingTop: 50,\n                paddingBottom: 50,\n\n                body: (\n                    <React.Fragment>\n                        {plans.length === 0\n                            ? <BodyText style={{ paddingTop: 16 }} text={translate(\"plans.plans.empty\")} />\n                            : plans.map((plan) => (\n                                <React.Fragment key={plan.id}>\n                                    <SubHeader text={plan.name} />\n                                    <Chart plan={plan} />\n                                </React.Fragment>\n                            ))\n                        }\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\n// @ts-ignore\nexport default withSnackbar(withRouter(withStyles(styles)(SchedulesPage)));\n"],"sourceRoot":""}