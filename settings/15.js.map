{"version":3,"sources":["webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./state/planHooks.tsx","webpack:///./components/temperatureToColor.tsx","webpack:///./components/AddFab.tsx","webpack:///./components/TemperatureAvatar.tsx","webpack:////home/travis/build/mskg/homey-heating/assets/icon_black.svg","webpack:///./pages/plan-schedule.tsx"],"names":["callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","tslib__WEBPACK_IMPORTED_MODULE_0__","undefined","planCopy","Object","assign","zones","length","devices","_callAPI__WEBPACK_IMPORTED_MODULE_2__","id","planAPI","fetchPlans","res","lodash__WEBPACK_IMPORTED_MODULE_1__","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","__webpack_exports__","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","a","createElement","position","color","className","variant","noWrap","createLink","_a","innerRef","tslib_es6","to","toString","match","react_default","onClick","openURL","react_router_dom","components_ListItemLink","index_es","component","Menu_styles","theme","text","padding","spacing","unit","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","Menu_default","react_router","styles","elements","type","Translation","Drawer_default","gutterBottom","map","e","key","disabled","url","otherProps","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","root","webkitOverflowScrolling","flexFlow","height","width","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","d","useHistory","useModifyPlan","useModifyExceptions","useModifySetPoints","usePlan","react__WEBPACK_IMPORTED_MODULE_0__","uuid_v1__WEBPACK_IMPORTED_MODULE_1__","_api_heating__WEBPACK_IMPORTED_MODULE_2__","_PlanProvider__WEBPACK_IMPORTED_MODULE_3__","dispatch","loaded","savePoint","undo","commit","setName","evt","target","value","setDescription","description","toggleState","toggleZone","zone","toggleDevice","isDirty","setDirty","setOverride","temp","temperature","clearOverride","updateOverride","selectDay","day","selectedDay","setPoint","copyDays","source","days","targets","removeSetPoint","idx","index","loadSetPoint","point","newSetPoint","saveSetPoint","setStart","date","start","setTargetTemperature","parseFloat","cachedPlan","keep","then","overrides","temperatureToColor","_material_ui_core_colors_amber__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_colors_amber__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_colors_green__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_colors_green__WEBPACK_IMPORTED_MODULE_3___default","shade","Math","round","val","min","max","b","floor","slotTemperature","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","fabButton","zIndex","bottom","right","aria-label","FilledTemperatureAvatar","TemperatureAvatar","_material_ui_core__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_colors_deepOrange__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_colors_lightBlue__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_colors_lightBlue__WEBPACK_IMPORTED_MODULE_4___default","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","_temperatureToColor__WEBPACK_IMPORTED_MODULE_6__","Icon","fontSize","float","textAlign","flexDirection","AVATAR_DIMENSION","avatar","lineHeight","overflow","img","left","fill","FixedDigits","digits","pow","toFixed","data","background","module","exports","r","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_ArrowBackIos__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowBackIos__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_FileCopy__WEBPACK_IMPORTED_MODULE_12__","_material_ui_icons_FileCopy__WEBPACK_IMPORTED_MODULE_12___default","react__WEBPACK_IMPORTED_MODULE_13__","react__WEBPACK_IMPORTED_MODULE_13___default","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","react_scroll_locky__WEBPACK_IMPORTED_MODULE_15__","_app_model__WEBPACK_IMPORTED_MODULE_16__","_components_AddFab__WEBPACK_IMPORTED_MODULE_17__","_components_AppHeader__WEBPACK_IMPORTED_MODULE_18__","_components_Menu__WEBPACK_IMPORTED_MODULE_19__","_components_TemperatureAvatar__WEBPACK_IMPORTED_MODULE_20__","_i18n_Translation__WEBPACK_IMPORTED_MODULE_21__","_layouts_Page__WEBPACK_IMPORTED_MODULE_22__","_state_planHooks__WEBPACK_IMPORTED_MODULE_23__","_state_PlanProvider__WEBPACK_IMPORTED_MODULE_24__","CopyDayDialog","lazy","bind","SetPointDialog","all","formatNumber","i","tabToDate","dateDay","list","marginTop","marginBottom","tab","minWidth","location","history","isSetPointDialogOpen","setSetPointDialogOpen","isCopyDayDialogOpen","setIsCopyDayDialogOpen","selectedTab","setTab","params","useEffect","selectTab","removeSetPointFunc","onConfirm","onCancel","replace","pathname","state","onChange","_e","v","disableRipple","label","isolation","last","dateToTab","targetTemperature","secondary","hour","minute","schedules","sp","onEditSetPoint","menuButton"],"mappings":"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","file":"15.js","sourcesContent":["export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { useCallback, useEffect, useState } from \"react\";\nimport * as uuidv1 from \"uuid/v1\";\nimport { OverrideMode } from \"../../app/model\";\nimport { planAPI } from \"../api/heating\";\nimport { usePlanDispatch, usePlanGlobalState } from \"./PlanProvider\";\n\nexport const useHistory = () => {\n    const dispatch = usePlanDispatch();\n    const loaded = usePlanGlobalState(\"loaded\");\n\n    const savePoint = useCallback(() => dispatch({ type: \"savePoint\" }), [dispatch]);\n    const undo = useCallback(() => dispatch({ type: \"undo\" }), [dispatch]);\n    const commit = useCallback(() => dispatch({ type: \"commit\" }), [dispatch]);\n\n    useEffect(() => {\n        savePoint();\n    }, [loaded]);\n\n    return {\n        savePoint, undo, commit,\n    };\n};\n\nexport const useModifyPlan = () => {\n    const dispatch = usePlanDispatch();\n\n    const setName = useCallback((evt) => dispatch({ type: \"setName\", name: evt.target.value }), [dispatch]);\n    const setDescription = useCallback((evt) => dispatch({ type: \"setDescription\", description: evt.target.value }), [dispatch]);\n\n    const toggleState = useCallback(() => dispatch({ type: \"toggleEnabled\" }), [dispatch]);\n    const toggleZone = useCallback((id) => dispatch({ type: \"toggleZone\", zone: id }), [dispatch]);\n    const toggleDevice = useCallback((id) => dispatch({ type: \"toggleDevice\", device: id }), [dispatch]);\n\n    return { setName, setDescription, toggleState, toggleZone, toggleDevice };\n};\n\nexport const useModifyExceptions = () => {\n    const dispatch = usePlanDispatch();\n    const [isDirty, setDirty] = useState<boolean>(false);\n\n    const setOverride = useCallback((mode, temp) => {\n        dispatch({ type: \"setOverride\", mode, temperature: temp });\n        setDirty(true);\n    }, [dispatch]);\n\n    const clearOverride = useCallback((mode) => {\n        dispatch({ type: \"clearOverride\", mode });\n        setDirty(true);\n    }, [dispatch]);\n\n    const updateOverride = useCallback((mode: OverrideMode, target: number) => {\n        if (target === 0) { clearOverride(mode); } else { setOverride(mode, target); }\n    }, [dispatch]);\n\n    useEffect(() => {\n        setDirty(false);\n    }, []);\n\n    return { isDirty, setOverride, clearOverride, updateOverride };\n};\n\nexport const useModifySetPoints = () => {\n    const [isDirty, setDirty] = useState<boolean>(false);\n\n    const dispatch = usePlanDispatch();\n\n    const selectDay = useCallback((day) => { dispatch({ type: \"selectDay\", day }); }, [dispatch]);\n    const selectedDay = usePlanGlobalState(\"selectedDay\");\n    const setPoint = usePlanGlobalState(\"setPoint\");\n\n    const copyDays = useCallback((source, days) => {\n        if (days != null && days.length > 0) {\n            setDirty(true);\n            dispatch({ type: \"copyDays\", source, targets: days });\n        }\n    }, [dispatch]);\n\n    const removeSetPoint = useCallback((idx) => { setDirty(true); dispatch({ type: \"removeSetPoint\", index: idx }); }, [dispatch]);\n\n    const loadSetPoint = useCallback((point) => { dispatch({ type: \"loadSetPoint\", setPoint: point }); }, [dispatch]);\n    const newSetPoint = useCallback((day) => { dispatch({ type: \"newSetPoint\", day }); }, [dispatch]);\n\n    const saveSetPoint = useCallback((s) => {\n        if (s.index === -1) {\n            dispatch({ type: \"addSetPoint\", setPoint: s });\n        } else {\n            dispatch({ type: \"updateSetPoint\", setPoint: s });\n        }\n    }, [dispatch]);\n\n    const setStart = useCallback((date: Date | string) => dispatch({ type: \"setStart\", start: date }), [dispatch]);\n    const setTargetTemperature = useCallback((evt) => dispatch({ type: \"setTargetTemperature\", temperature: parseFloat(evt.target.value) }), [dispatch]);\n\n    useEffect(() => {\n        setDirty(false);\n    }, []);\n\n    return { setDirty, isDirty, selectedDay, setPoint, copyDays, removeSetPoint, loadSetPoint, newSetPoint, selectDay, saveSetPoint, setStart, setTargetTemperature };\n};\n\nlet cachedPlan = false;\nexport const usePlan = (id: string, keep: boolean = true) => {\n    const dispatch = usePlanDispatch();\n\n    const plan = usePlanGlobalState(\"plan\");\n    const loaded = usePlanGlobalState(\"loaded\");\n    const isDirty = usePlanGlobalState(\"dirty\");\n\n    if (!loaded || !keep) {\n        if ((id == null || id === \"new\") && !cachedPlan) {\n            cachedPlan = true;\n            dispatch({\n                type: \"loadPlan\", plan: {\n                    id: uuidv1(),\n                    enabled: false,\n                    name: \"\",\n                    zones: [],\n                    devices: [],\n                    schedule: [],\n                    overrides: undefined,\n                },\n            });\n        } else {\n            if (!cachedPlan) {\n                throw planAPI.fetchPlanById(id).then((p) => {\n                    cachedPlan = true;\n                    dispatch({ type: \"loadPlan\", plan: p });\n                });\n            }\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            cachedPlan = false;\n        };\n    }, [id, keep]);\n\n    return { plan, isDirty, loaded };\n};\n","import amber from \"@material-ui/core/colors/amber\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport green from \"@material-ui/core/colors/green\";\n\nexport function slotTemperature(val: number, min: number, max: number, a: number, b: number) {\n    //        (b-a)(x - min)\n    // f(x) = -------------- +  a\n    //        max - min\n    //\n    return Math.floor(\n        (((b - a) * (val - min)) /\n        (max - min))\n        + a,\n    );\n}\n\nexport const temperatureToColor = (n: number) => {\n    // project 16 ... 24 to 200 ... 900\n    const shade = Math.round(slotTemperature(\n        Math.min(Math.max(16, n), 24),\n        16, 24,\n        1, 8) * 100 + 100);\n\n    if (n <= 16) {\n        return blue[shade];\n    }\n\n    if (n <= 18.5) {\n        return green[shade];\n    }\n\n    if (n <= 20.5) {\n        return amber[shade];\n    }\n\n    return deepOrange[shade];\n};\n","import Fab from \"@material-ui/core/Fab\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    fabButton: {\n        zIndex: 1,\n        margin: \"0 auto\",\n\n        position: \"absolute\" as \"absolute\",\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = WithStyles<typeof styles> & {\n    onClick: () => void,\n};\n\nconst AddFabComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n\n    return (\n        <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fabButton} onClick={() => props.onClick()}>\n            <AddIcon />\n        </Fab>\n    );\n};\n\nexport default withStyles(styles)(AddFabComponent);\n","import { StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport blue from \"@material-ui/core/colors/lightBlue\";\nimport React from \"react\";\nimport { temperatureToColor } from \"./temperatureToColor\";\n\n// tslint:disable-next-line: no-var-requires\nconst Icon = require(\"../../../assets/icon_black.svg\");\n\nconst AVATAR_DIMENSION = 35;\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        fontSize: \"1em\",\n        float: \"left\",\n        textAlign: \"center\",\n\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n\n        width: AVATAR_DIMENSION + 10,\n        // height: AVATAR_DIMENSION,\n        // overflow: \"hidden\",\n    },\n\n    avatar: {\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION,\n        lineHeight: AVATAR_DIMENSION,\n\n        position: \"relative\",\n        overflow: \"hidden\",\n    },\n\n    img: {\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION,\n\n        zIndex: 2,\n        position: \"absolute\",\n        left: 0,\n        bottom: 0,\n    },\n\n    fill: {\n        display: \"block\",\n\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION - 2,\n\n        zIndex: 1,\n\n        position: \"absolute\",\n        left: 0,\n        bottom: 1,\n    },\n\n    // root: {\n    //     fontSize: \"1em\",\n\n    //     width: height,\n    //     height: height,\n    //     lineHeight: height,\n\n    //     zIndex: 2,\n\n    //     float: \"left\",\n    //     textAlign: \"center\",\n    //     border: \"1px solid\",\n    //     borderRadius: \"100%\",\n    //     position: \"relative\",\n\n    //     overflow: \"hidden\",\n    // },\n\n    // fill: {\n    //     display: \"block\",\n\n    //     width: height,\n    //     height: height,\n\n    //     zIndex: 1,\n    //     position: \"absolute\",\n    //     left: 0,\n    //     bottom: 0,\n    // }\n});\n\ntype FilledProps = {\n    digits?: number;\n    value: number;\n    fill: number;\n} & WithStyles<typeof styles>;\n\nfunction FixedDigits(value: number, digits: number) {\n    return (Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits)).toFixed(digits);\n}\n\nconst BaseFilledTemperatureAvatar: React.FunctionComponent<FilledProps> = (props) => {\n    const { value, classes, fill } = props;\n    let { digits } = props;\n\n    const color = (fill === 100 ? blue : deepOrange)[500];\n    if (digits == null) { digits = 2; }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.avatar} >\n                <object className={classes.img} data={Icon} type=\"image/svg+xml\" />\n                <span style={{ height: `calc(${fill}% - 5px)`, background: color }} className={classes.fill} />\n            </div>\n\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"div\">{FixedDigits(value, digits)}°</Typography>\n        </div>\n    );\n};\n\ntype Props = {\n    value: number;\n};\n\nconst BaseTemperatureAvatar: React.FunctionComponent<Props> = (props) => {\n    const { value } = props;\n\n    return (\n        <Avatar style={{ padding: \"25px\", background: temperatureToColor(value), fontSize: \"1em\" }}>{FixedDigits(value, 1)}°</Avatar>\n    );\n};\n\nexport function normalize(min: number, max: number, x: number) {\n    return (x - min) / (max - min);\n}\n\nexport const FilledTemperatureAvatar = withStyles(styles)(BaseFilledTemperatureAvatar);\nexport const TemperatureAvatar = withStyles(styles)(BaseTemperatureAvatar);\n","module.exports = __webpack_public_path__ + \"icon_black.svg?5136879a03a13f9fb18f241b081f38cb\";","import { Button, ListItemSecondaryAction } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport BackIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport TrashIcon from \"@material-ui/icons/Delete\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport React, { useCallback } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ScrollLocky } from \"react-scroll-locky\";\nimport { Day, ISetPoint } from \"../../app/model\";\nimport AddFab from \"../components/AddFab\";\nimport AppHeader from \"../components/AppHeader\";\nimport { MenuButton } from \"../components/Menu\";\nimport { TemperatureAvatar } from \"../components/TemperatureAvatar\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\nimport { useHistory, useModifySetPoints, usePlan } from \"../state/planHooks\";\nimport { usePlanDispatch } from \"../state/PlanProvider\";\n\nconst CopyDayDialog = React.lazy(() => import(\"../dialogs/CopyDayDialog\"));\nconst SetPointDialog = React.lazy(() => import(\"../dialogs/SetPointDialog\"));\n\nconst styles: StyleRulesCallback = (theme) => ({\n    list: {\n        marginTop: 0,\n        marginBottom: theme.spacing.unit * 2,\n    },\n\n    tab: {\n        minWidth: \"50px\",\n    },\n\n    avatar: {\n\n    },\n});\n\nfunction formatNumber(i: number) {\n    return i > 9 ? i.toString() : \"0\" + i;\n}\n\nfunction tabToDate(dateDay: number): number {\n    return dateDay + 1 > 6 ? 0 : dateDay + 1;\n}\n\nfunction dateToTab(dateDay: number): number {\n    return dateDay === 0 ? 6 : dateDay - 1;\n}\n\ntype IndexedSetPoint = {\n    index: number,\n} & ISetPoint;\n\ntype Params = {\n    id: string;\n};\n\ntype Props = WithStyles<typeof styles> & RouteComponentProps<Params, {}, boolean>;\n\nconst SchedulePage: React.FunctionComponent<Props> = (props: Props) => {\n    const { classes, location, history } = props;\n\n    const dispatch = usePlanDispatch();\n\n    const [isSetPointDialogOpen, setSetPointDialogOpen] = React.useState(false);\n    const [isCopyDayDialogOpen, setIsCopyDayDialogOpen] = React.useState(false);\n    const [selectedTab, setTab] = React.useState(0);\n\n    const { plan, loaded } = usePlan(props.match.params.id);\n    const { undo, commit } = useHistory();\n\n    React.useEffect(() => {\n        selectTab(0);\n\n        setSetPointDialogOpen(false);\n        setIsCopyDayDialogOpen(false);\n    }, [location, loaded]);\n\n    const {\n        isDirty, setDirty,\n        selectedDay, copyDays, loadSetPoint, newSetPoint, selectDay, removeSetPoint: removeSetPointFunc,\n    } = useModifySetPoints();\n\n    const selectTab = useCallback((tab) => {\n        setTab(tab);\n        selectDay(tabToDate(tab));\n    }, [dispatch]);\n\n    // depends on local variables\n    const removeSetPoint = (idx: number) => {\n        removeSetPointFunc(idx);\n        selectTab(selectedTab);\n    };\n\n    // depends on local variables\n    const copyDay = (days: Day[]) => {\n        copyDays(tabToDate(selectedTab), days);\n        selectTab(selectedTab);\n        setIsCopyDayDialogOpen(false);\n    };\n\n    function onCancelDialog() {\n        undo();\n\n        history.replace({\n            pathname: `/plans/${plan.id}`,\n            state: true,\n        });\n    }\n\n    function onSaveDialog() {\n        commit();\n\n        history.replace({\n            pathname: `/plans/${plan.id}`,\n            state: true,\n        });\n    }\n\n    function onEditSetPoint(sp: ISetPoint, index: number) {\n        loadSetPoint({ ...sp, index });\n        setSetPointDialogOpen(true);\n    }\n\n    function addSetPoint() {\n        newSetPoint(tabToDate(selectedTab));\n        setSetPointDialogOpen(true);\n    }\n\n    return (\n        <React.Fragment>\n            <CopyDayDialog\n                open={isCopyDayDialogOpen}\n                onConfirm={copyDay}\n                onCancel={() => { setIsCopyDayDialogOpen(false); }}\n            />\n\n            <SetPointDialog\n                open={isSetPointDialogOpen}\n                onClose={(d) => {\n                    if (d) { setDirty(true); selectTab(selectedTab); }\n                    setSetPointDialogOpen(false);\n                }}\n            />\n\n            <Page>\n                {{\n                    header: (\n                        <AppHeader>\n                            {{\n                                title: translate(\"schedule.title\"),\n                                button: (\n                                    <MenuButton first={true} onClick={onCancelDialog} icon={isDirty ? <CancelIcon /> : <BackIcon />} />\n                                ),\n                                actions: (\n                                    <React.Fragment>\n                                        <MenuButton onClick={() => { setIsCopyDayDialogOpen(true); }} icon={<CopyIcon />} />\n\n                                        {isDirty &&\n                                            <Button color=\"inherit\" onClick={onSaveDialog}>\n                                                {translate(\"schedule.save\")}\n                                            </Button>\n                                        }\n                                    </React.Fragment>\n                                ),\n                                subBar: (\n                                    <Tabs value={selectedTab} onChange={(_e, v) => selectTab(v)} variant=\"fullWidth\">\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Monday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Tuesday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Wednesday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Thursday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Friday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Saturday\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"schedule.Sunday\")} />\n                                    </Tabs>\n                                ),\n                            }}\n                        </AppHeader>\n                    ),\n                    paddingTop: 100,\n                    paddingBottom: 60,\n                    body: (\n                        <React.Fragment>\n                            <ScrollLocky enabled={isSetPointDialogOpen || isCopyDayDialogOpen} isolation={false}>\n                                <List className={classes.list}>\n                                    {\n                                        selectedDay.last &&\n                                        <React.Fragment key=\"-1\">\n                                            <ListItem button={true} onClick={() => selectTab(dateToTab((selectedDay.last && selectedDay.last.day) || 0))}>\n                                                <TemperatureAvatar value={selectedDay.last.targetTemperature} />\n\n                                                <ListItemText\n                                                    primary={`${Day[selectedDay.last.day]}`}\n                                                    secondary={`${formatNumber(selectedDay.last.hour)}:${formatNumber(selectedDay.last.minute)}`}\n                                                />\n                                            </ListItem>\n                                            <Divider />\n                                        </React.Fragment>\n                                    }\n                                    {\n                                        selectedDay.schedules.map((schedule: IndexedSetPoint) =>\n                                            <React.Fragment key={schedule.index}>\n                                                <ListItem button={true} onClick={() => onEditSetPoint(schedule, schedule.index)}>\n                                                    <TemperatureAvatar value={schedule.targetTemperature} />\n\n                                                    <ListItemText primary={`${formatNumber(schedule.hour)}:${formatNumber(schedule.minute)}`} />\n\n                                                    <ListItemSecondaryAction>\n                                                        <IconButton className={classes.menuButton} onClick={() => removeSetPoint(schedule.index)}>\n                                                            <TrashIcon />\n                                                        </IconButton>\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                                <Divider />\n                                            </React.Fragment>,\n                                        )\n                                    }\n                                </List>\n                            </ScrollLocky>\n\n                            <AddFab onClick={addSetPoint} />\n                        </React.Fragment>\n                    ),\n                }}\n            </Page>\n        </React.Fragment>\n    );\n};\n\nexport default withRouter(withStyles(styles)(SchedulePage));\n"],"sourceRoot":""}