{"version":3,"sources":["webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/Avatar/index.js","webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/InputContainer.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./components/FormTextField.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./api/settings/index.tsx","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:///./components/temperatureToColor.tsx","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/colors/green.js","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/colors/amber.js","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/Avatar/Avatar.js","webpack:///./components/TemperatureAvatar.tsx","webpack:////home/travis/build/mskg/homey-heating/assets/icon_black.svg","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/colors/lightBlue.js","webpack:///./pages/temperatures.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_Avatar","default","callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","planCopy","zones","length","undefined","devices","id","planAPI","fetchPlans","res","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","position","color","className","variant","noWrap","theme","inputContainer","width","paddingLeft","spacing","unit","paddingRight","createLink","innerRef","to","toString","match","onClick","openURL","component","text","padding","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","elements","type","gutterBottom","map","e","key","disabled","url","otherProps","root","webkitOverflowScrolling","flexFlow","height","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","headline","marginTop","fullWidth","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","settingsAPI","fetchSettings","updateSettings","settings","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","state","setState","failed","setFailed","loadValue","force","set","apiMethod","setStateAction","tryMethod","r","catch","delete","charAt","toUpperCase","slice","usePlans","useDevices","useZones","useScheduleInformation","useSettings","useMode","temperatureToColor","n","shade","Math","round","min","max","a","b","floor","slotTemperature","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","styles","_defineProperty2","_extends2","_objectWithoutProperties2","_react","_classnames","_withStyles","flexShrink","fontFamily","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","colorDefault","background","grey","img","textAlign","objectFit","Avatar","alt","childrenProp","childrenClassNameProp","childrenClassName","classNameProp","Component","imgProps","sizes","src","srcSet","other","createElement","isValidElement","cloneElement","system","defaultProps","Icon","float","flexDirection","AVATAR_DIMENSION","avatar","lineHeight","zIndex","left","bottom","fill","FixedDigits","digits","pow","toFixed","FilledTemperatureAvatar","data","TemperatureAvatar","module","percent","list","marginBottom","scheduleInformation","getDisplayName","thermostatMode","Automatic","conflictingPlans","otherPlans","filter","join","formControl","m","nextDate","label","d","date","Date","ten","i","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","toDatetimeLocal","targetTemperature","secondary","temperature"],"mappings":"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","file":"7.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Avatar.default;\n  }\n});\n\nvar _Avatar = _interopRequireDefault(require(\"./Avatar\"));","export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    inputContainer: {\n        width: \"100%\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 3,\n    },\n});\n\ntype Props = {\n    children: React.ReactElement<any>,\n} & WithStyles<typeof styles>;\n\nconst InputContainer: React.FunctionComponent<Props> = (props) => {\n    return (<div className={props.classes.inputContainer}>{props.children}</div>);\n};\n\nexport default withStyles(styles)(InputContainer);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    // @ts-ignore\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport InputContainer from \"./InputContainer\";\n\nconst FormTextField = ({ classes, ...otherProps }: TextFieldProps) => {\n    return (\n        <InputContainer>\n            <TextField\n                fullWidth={true}\n                margin=\"normal\"\n                {...otherProps}\n            />\n        </InputContainer>\n    );\n};\n\nexport default FormTextField;\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        function loadValue(force: boolean = false) {\n            if (cache.get(name) == null || force) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        loadValue();\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans(force?: boolean): HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","import amber from \"@material-ui/core/colors/amber\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport green from \"@material-ui/core/colors/green\";\n\nexport function slotTemperature(val: number, min: number, max: number, a: number, b: number) {\n    //        (b-a)(x - min)\n    // f(x) = -------------- +  a\n    //        max - min\n    //\n    return Math.floor(\n        (((b - a) * (val - min)) /\n        (max - min))\n        + a,\n    );\n}\n\nexport const temperatureToColor = (n: number) => {\n    // project 16 ... 24 to 200 ... 900\n    const shade = Math.round(slotTemperature(\n        Math.min(Math.max(16, n), 24),\n        16, 24,\n        1, 8) * 100 + 100);\n\n    if (n <= 16) {\n        return blue[shade];\n    }\n\n    if (n <= 18.5) {\n        return green[shade];\n    }\n\n    if (n <= 20.5) {\n        return amber[shade];\n    }\n\n    return deepOrange[shade];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nvar _default = green;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar amber = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\nvar _default = amber;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Avatar(props) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = _react.default.createElement(\"img\", (0, _extends2.default)({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && _react.default.isValidElement(childrenProp)) {\n    children = _react.default.cloneElement(childrenProp, {\n      className: (0, _classnames.default)(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, classes.system, (0, _defineProperty2.default)({}, classes.colorDefault, !img), classNameProp)\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: _propTypes.default.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: _propTypes.default.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _utils.componentPropType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: _propTypes.default.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: _propTypes.default.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: _propTypes.default.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: _propTypes.default.string\n} : void 0;\nAvatar.defaultProps = {\n  component: 'div'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiAvatar'\n})(Avatar);\n\nexports.default = _default;","import { StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport blue from \"@material-ui/core/colors/lightBlue\";\nimport React from \"react\";\nimport { temperatureToColor } from \"./temperatureToColor\";\n\n// tslint:disable-next-line: no-var-requires\nconst Icon = require(\"../../../assets/icon_black.svg\");\n\nconst AVATAR_DIMENSION = 35;\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        fontSize: \"1em\",\n        float: \"left\",\n        textAlign: \"center\",\n\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n\n        width: AVATAR_DIMENSION + 10,\n        // height: AVATAR_DIMENSION,\n        // overflow: \"hidden\",\n    },\n\n    avatar: {\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION,\n        lineHeight: AVATAR_DIMENSION,\n\n        position: \"relative\",\n        overflow: \"hidden\",\n    },\n\n    img: {\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION,\n\n        zIndex: 2,\n        position: \"absolute\",\n        left: 0,\n        bottom: 0,\n    },\n\n    fill: {\n        display: \"block\",\n\n        width: AVATAR_DIMENSION,\n        height: AVATAR_DIMENSION - 2,\n\n        zIndex: 1,\n\n        position: \"absolute\",\n        left: 0,\n        bottom: 1,\n    },\n\n    // root: {\n    //     fontSize: \"1em\",\n\n    //     width: height,\n    //     height: height,\n    //     lineHeight: height,\n\n    //     zIndex: 2,\n\n    //     float: \"left\",\n    //     textAlign: \"center\",\n    //     border: \"1px solid\",\n    //     borderRadius: \"100%\",\n    //     position: \"relative\",\n\n    //     overflow: \"hidden\",\n    // },\n\n    // fill: {\n    //     display: \"block\",\n\n    //     width: height,\n    //     height: height,\n\n    //     zIndex: 1,\n    //     position: \"absolute\",\n    //     left: 0,\n    //     bottom: 0,\n    // }\n});\n\ntype FilledProps = {\n    digits?: number;\n    value: number;\n    fill: number;\n} & WithStyles<typeof styles>;\n\nfunction FixedDigits(value: number, digits: number) {\n    return (Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits)).toFixed(digits);\n}\n\nconst BaseFilledTemperatureAvatar: React.FunctionComponent<FilledProps> = (props) => {\n    const { value, classes, fill } = props;\n    let { digits } = props;\n\n    const color = (fill === 100 ? blue : deepOrange)[500];\n    if (digits == null) { digits = 2; }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.avatar} >\n                <object className={classes.img} data={Icon} type=\"image/svg+xml\" />\n                <span style={{ height: `calc(${fill}% - 5px)`, background: color }} className={classes.fill} />\n            </div>\n\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"div\">{FixedDigits(value, digits)}°</Typography>\n        </div>\n    );\n};\n\ntype Props = {\n    value: number;\n};\n\nconst BaseTemperatureAvatar: React.FunctionComponent<Props> = (props) => {\n    const { value } = props;\n\n    return (\n        <Avatar style={{ padding: \"25px\", background: temperatureToColor(value), fontSize: \"1em\" }}>{FixedDigits(value, 1)}°</Avatar>\n    );\n};\n\nexport function normalize(min: number, max: number, x: number) {\n    return (x - min) / (max - min);\n}\n\nexport const FilledTemperatureAvatar = withStyles(styles)(BaseFilledTemperatureAvatar);\nexport const TemperatureAvatar = withStyles(styles)(BaseTemperatureAvatar);\n","module.exports = __webpack_public_path__ + \"icon_black.svg?5136879a03a13f9fb18f241b081f38cb\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\nvar _default = lightBlue;\nexports.default = _default;","import { FormControl, InputLabel, ListItemAvatar, MenuItem, Select } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { IGroupedCalculatedTemperature, NormalOperationMode } from \"../../app/model/heating\";\nimport { useScheduleInformation } from \"../api/hooks\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport FormTextField from \"../components/FormTextField\";\nimport InputContainer from \"../components/InputContainer\";\nimport { AppMenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport { FilledTemperatureAvatar, TemperatureAvatar } from \"../components/TemperatureAvatar\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    list: {\n        marginTop: 0,\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = WithStyles<typeof styles>;\n\nfunction percent(a: number, b: number) {\n    if (a > b) { return 100; }\n\n    return Math.round(a / b * 100);\n}\n\nconst TemperaturesPage: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { scheduleInformation } = useScheduleInformation();\n\n    const toDatetimeLocal = (d: Date) => {\n        if (d == null) { return \"\"; }\n\n        const date = new Date(d);\n        const ten = (i: number) => {\n            return (i < 10 ? \"0\" : \"\") + i;\n        };\n\n        const YYYY = date.getFullYear();\n        const MM = ten(date.getMonth() + 1);\n        const DD = ten(date.getDate());\n        const HH = ten(date.getHours());\n        const II = ten(date.getMinutes());\n        const SS = ten(date.getSeconds());\n\n        return YYYY + \"-\" + MM + \"-\" + DD + \"T\" +\n            HH + \":\" + II + \":\" + SS;\n    };\n\n    function getDisplayName(schedule: IGroupedCalculatedTemperature) {\n        if (schedule.thermostatMode !== NormalOperationMode.Automatic) {\n            return translate(`ThermostatMode.${schedule.thermostatMode}`);\n        }\n\n        if (schedule.conflictingPlans.length > 1) {\n            const otherPlans = schedule.conflictingPlans\n                .filter((p) => schedule.plan.id !== p.id)\n                .map((p) => p.name).join(\", \");\n\n            return `${schedule.plan.name} (${otherPlans})`;\n        }\n\n        return schedule.plan.name;\n    }\n\n    return (\n        <Page>\n            {{\n                header: (\n                    <AppHeader>\n                    {{\n                        title: translate(\"temperatures.title\"),\n                        button: (\n                            <AppMenuButton />\n                        ),\n                    }}\n                </AppHeader>\n                ),\n                paddingTop: 50,\n                body: (\n                    <React.Fragment>\n                        <SubHeader text={translate(\"temperatures.schedule\")} />\n\n                        <InputContainer>\n                            <FormControl className={classes.formControl} fullWidth={true}>\n                                <InputLabel>{translate(\"temperatures.mode\")}</InputLabel>\n\n                                <Select\n                                    fullWidth={true}\n                                    disabled={true}\n                                    value={scheduleInformation.mode}\n                                >\n                                {\n                                    [0, 1, 2, 3, 4, 5].map((m) =>\n                                        (<MenuItem key={m} value={m}>{translate(`Modes.${m}`)}</MenuItem>),\n                                    )\n                                }\n                                </Select>\n                            </FormControl>\n                        </InputContainer>\n\n                        {scheduleInformation.nextDate &&\n                            <FormTextField\n                                label={translate(\"temperatures.next\")}\n                                type=\"datetime-local\"\n                                value={toDatetimeLocal(scheduleInformation.nextDate)}\n                                disabled={true}\n                            />\n                        }\n\n                        <SubHeader text={translate(\"temperatures.list.title\")} />\n                        <BodyText text={translate(\"temperatures.list.text\")} />\n\n                        {scheduleInformation.temperatures.length === 0\n                            ? <BodyText style={{paddingTop: 16}} text={translate(\"temperatures.list.empty\")} />\n                            : <List className={classes.list}>\n                                {scheduleInformation.temperatures.length > 0 && <Divider />}\n                                {scheduleInformation.temperatures.map((schedule) => (\n                                    <React.Fragment key={schedule.device.id + schedule.plan.id}>\n                                        <ListItem>\n                                            <ListItemAvatar>\n                                                <TemperatureAvatar value={schedule.targetTemperature} />\n                                            </ListItemAvatar>\n                                            <ListItemText primary={schedule.device.name} secondary={getDisplayName(schedule)} />\n                                            <ListItemSecondaryAction style={{ paddingRight: 16 }} >\n                                                <FilledTemperatureAvatar value={schedule.temperature || schedule.targetTemperature} fill={percent(schedule.temperature || schedule.targetTemperature , schedule.targetTemperature)} />\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                        <Divider />\n                                    </React.Fragment>\n                                ))}\n                            </List>\n                        }\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\nexport default withStyles(styles)(TemperaturesPage);\n"],"sourceRoot":""}