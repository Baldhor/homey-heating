{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./state/calculateDay.tsx","webpack:///./components/Loading.tsx","webpack:///./router.tsx","webpack:///./index.tsx","webpack:///./components/ErrorBoundary.tsx","webpack:///../app/model/index.ts","webpack:///./i18n/Translation.tsx","webpack:///./state/PlanReducer.tsx","webpack:///./state/PlanProvider.tsx","webpack:///../app/model/heating.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","5","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","head","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","sortSchedules","calculateDay","lodash__WEBPACK_IMPORTED_MODULE_0__","newList","day","map","sp","assign","index","plan","newSchedules","schedule","filter","last","nd","schedules","Loading","react","index_es","style","position","top","left","marginTop","marginLeft","color","size","PlanDetailPage","then","PlanExceptionsPage","PlanSchedulePage","AllSchedulesPage","PlanRoutes","match","PlanProvider","Route","path","url","exact","component","OverviewPage","SettingsPage","TemperaturesPage","theme","styles","palette","primary","blue_default","a","secondary","deepOrange_default","react_dom","[object Object]","props","super","this","state","hasError","info","setState","react_default","Translation","whiteSpace","toString","componentStack","children","build","maxSnack","anchorOrigin","vertical","horizontal","maxWidth","fallback","HashRouter","Switch","querySelector","_heating__WEBPACK_IMPORTED_MODULE_0__","translate","Homey","__","defaultSetpoint","hour","minute","targetTemperature","initialState","loaded","dirty","savePoint","setPoint","zones","devices","id","enabled","description","overrides","selectedDay","reducerImplementation","action","JSON","stringify","parse","model","temperature","date","start","Date","getUTCHours","getUTCMinutes","lodash","device","z","zone","templateDay","source","newSchedule","targets","old","reducer","usePlanDispatch","usePlanGlobalState","createContext","useContext","useReducer","planStateCtx","planDispatchCtx","dispatch","Provider","Day","NormalOperationMode","OverrideMode","ThermostatMode"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([363,6]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { sortBy } from \"lodash\";\nimport { Day, IHeatingPlan, ISetPoint } from \"../../app/model\";\nimport { IndexedSetPoint } from \"./PlanReducer\";\n\nexport const sortSchedules = (newList: ISetPoint[]) => sortBy(newList, [(d: ISetPoint) => (d.day === 0 ? 7 : d.day), \"hour\", \"minute\"])\n    .map<IndexedSetPoint>((sp: ISetPoint, i: number) => ({ ...sp, index: i })) as IndexedSetPoint[];\n\nexport function calculateDay(plan: IHeatingPlan, day: Day) {\n    // filtered and sorted based on day\n    const newSchedules = plan.schedule.filter((sp) => sp.day === day);\n    // previous is last\n    const lastSchedule = (() => {\n        // no elements\n        if (plan.schedule.length === 0) {\n            return null;\n        }\n        // first element is first element\n        if (newSchedules.length !== 0 && (newSchedules[0] as IndexedSetPoint).index === 0) {\n            if (plan.schedule[plan.schedule.length - 1].day !== newSchedules[0].day) {\n                return plan.schedule[plan.schedule.length - 1];\n            }\n            return null;\n        }\n        if (newSchedules.length === 0) {\n            let nd = day - 1;\n            if (nd < 0) {\n                nd = 6;\n            }\n            // we search from right to left\n            while (nd >= 0) {\n                const last = plan.schedule.filter((sp) => sp.day === nd);\n                if (last.length > 0) {\n                    // already sorted\n                    return last[last.length - 1];\n                }\n                nd -= 1;\n            }\n            // cannot happen\n            return null;\n        }\n        // highest from last schedule\n        return plan.schedule[(newSchedules[0] as IndexedSetPoint).index - 1];\n    })();\n    return {\n        last: lastSchedule as IndexedSetPoint,\n        schedules: newSchedules as IndexedSetPoint[],\n    };\n}\n","import { CircularProgress } from \"@material-ui/core\";\nimport * as React from \"react\";\n\nexport const Loading: React.FunctionComponent = () => {\n    return (\n        <CircularProgress\n            // tslint:disable-next-line: jsx-no-multiline-js\n            style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: -40,\n                marginLeft: -40,\n            }}\n            color=\"secondary\"\n            size={80}\n        />\n    );\n};\n","import * as React from \"react\";\nimport { HashRouter, Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { Loading } from \"./components/Loading\";\nimport { PlanProvider } from \"./state/PlanProvider\";\n\nconst PlanDetailPage = React.lazy(() => import(\"./pages/plan\"));\nconst PlanExceptionsPage = React.lazy(() => import(\"./pages/plan-exceptions\"));\nconst PlanSchedulePage = React.lazy(() => import(\"./pages/plan-schedule\"));\nconst AllSchedulesPage = React.lazy(() => import(\"./pages/schedules\"));\n\nconst PlanRoutes: React.FunctionComponent<RouteComponentProps> = ({ match }) => {\n  return (\n    <PlanProvider>\n      {/* <Route path={`${match.url}/new`} exact component={PlanDetailPage} /> */}\n      <Route path={`${match.url}/:id/exceptions`} exact={true} component={PlanExceptionsPage} />\n      <Route path={`${match.url}/:id/schedule`} exact={true} component={PlanSchedulePage} />\n      <Route path={`${match.url}/:id`} exact={true} component={PlanDetailPage} />\n    </PlanProvider>\n  );\n};\n\nconst OverviewPage = React.lazy(() => import(\"./pages/overview\"));\nconst SettingsPage = React.lazy(() => import(\"./pages/settings\"));\nconst TemperaturesPage = React.lazy(() => import(\"./pages/temperatures\"));\n\nexport class AppRouter extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <React.Suspense fallback={<Loading />}>\n        <HashRouter>\n          <React.Fragment>\n            <Switch>\n              <Route exact={true} path=\"/\" component={OverviewPage} />\n\n              <Route exact={true} path=\"/settings\" component={SettingsPage} />\n              <Route exact={true} path=\"/temperatures\" component={TemperaturesPage} />\n              <Route exact={true} path=\"/schedules\" component={AllSchedulesPage} />\n\n              <Route path=\"/plans\" component={PlanRoutes} />\n            </Switch>\n          </React.Fragment>\n        </HashRouter>\n      </React.Suspense>\n    );\n  }\n}\n","import { CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\n// import pink from \"@material-ui/core/colors/pink\";\n// import green from \"@material-ui/core/colors/teal\";\nimport orange from \"@material-ui/core/colors/deepOrange\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport { AppRouter } from \"./router\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: orange,\n  },\n});\n\nReactDOM.render(\n  <ErrorBoundary>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider maxSnack={3} anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }} style={{ maxWidth: 280 }}>\n        <AppRouter />\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  </ErrorBoundary>\n  , document.querySelector(\"#root\"));\n","import React, { Component, Fragment } from \"react\";\nimport translate from \"../i18n/Translation\";\n\ntype State = {\n  hasError: boolean;\n\n  error?: Error;\n  info?: any\n};\n\ntype Props = {\n};\n\nexport class ErrorBoundary extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  public componentDidCatch(error: any, info: any) {\n    this.setState({ hasError: true, error, info });\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <Fragment>\n          <h1>{translate(\"confirm.title\")}</h1>\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.info.componentStack}\n          </div>\n        </Fragment>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","export * from \"./heating\";\n","import { forEach, reduce } from \"lodash\";\n\nlet translate: (id: string, param?: any) => string;\n\nif (__PRODUCTION__) {\n    translate = Homey.__;\n} else {\n    // tslint:disable-next-line: no-var-requires\n    const lang = require(`../../../locales/${__HOMEY_LANG}.json`);\n\n    translate = (id: string, param?: any) => {\n        let value = reduce(id.split(\".\"), (r, v, _k) => {\n            if (r == null) { throw new Error(`Resource ${id} not found.`); }\n            return r[v];\n        }, lang);\n\n        if (value == null) { throw new Error(`Resource ${id} not found.`); }\n\n        if (param != null) {\n            forEach(Object.keys(param), (k) => {\n                value = value.replace(`__${k}__`, param[k]);\n            });\n        }\n\n        return value;\n    };\n}\n\nexport default translate;\n","import { filter, forEach, isEmpty, map, remove } from \"lodash\";\nimport { Day, IHeatingPlan, ISetPoint, OverrideMode, Overrides } from \"../../app/model\";\nimport { HashType as DeviceHashType } from \"../api/devices\";\nimport { HashType as ZoneHashType } from \"../api/zones\";\nimport { calculateDay, sortSchedules } from \"./calculateDay\";\n\nexport type IndexedSetPoint = {\n    index: number,\n} & ISetPoint;\n\nconst defaultSetpoint: IndexedSetPoint = {\n    index: -1,\n    day: 0,\n    hour: 0,\n    minute: 0,\n    targetTemperature: 0,\n};\n\nexport const initialState = {\n    loaded: false,\n\n    dirty: false,\n    savePoint: null,\n\n    setPoint: {\n        ...defaultSetpoint,\n    },\n\n    zones: {} as ZoneHashType,\n    devices: {} as DeviceHashType,\n\n    plan: {\n        id: \"\",\n        enabled: false,\n        name: \"\",\n        description: \"\",\n        zones: [] as string[],\n        devices: [] as string[],\n        schedule: [] as IndexedSetPoint[],\n        overrides: null as (Overrides | null),\n    },\n\n    selectedDay: {\n        last: null as (IndexedSetPoint | null),\n        schedules: [] as IndexedSetPoint[],\n    },\n};\n\nexport type State = typeof initialState;\n\nexport type Action =\n    // data\n    | { type: \"loadZones\", zones: ZoneHashType }\n    | { type: \"loadDevices\", devices: DeviceHashType }\n\n    // plan\n    | { type: \"loadPlan\", plan: IHeatingPlan }\n    | { type: \"setName\", name: string }\n    | { type: \"setDescription\", description: string }\n    | { type: \"toggleDevice\", device: string }\n    | { type: \"toggleZone\", zone: string }\n    | { type: \"toggleEnabled\" }\n\n    // save state in history allows dialogs\n    | { type: \"savePoint\" }\n    | { type: \"commit\" }\n    | { type: \"undo\" }\n\n    // overrides\n    | { type: \"clearOverride\", mode: OverrideMode }\n    | { type: \"setOverride\", temperature: number, mode: OverrideMode }\n\n    // schedule dialog\n    | { type: \"copyDays\", source: Day, targets: Day[] }\n    | { type: \"addSetPoint\", setPoint: ISetPoint }\n    | { type: \"selectDay\", day: Day }\n\n    // setpoint\n    | { type: \"loadSetPoint\", setPoint: IndexedSetPoint }\n    | { type: \"setStart\", start: string | Date }\n    | { type: \"setTargetTemperature\", temperature: number }\n\n    | { type: \"updateSetPoint\", setPoint: IndexedSetPoint }\n    | { type: \"removeSetPoint\", index: number }\n    | { type: \"newSetPoint\", day: Day }\n;\n\n// tslint:disable: jsdoc-format\nconst reducerImplementation = (state: State, action: Action) => {\n    switch (action.type) {\n         /**\n         * Load devices\n         */\n        case \"loadDevices\": {\n            return {\n                ...state,\n                devices: action.devices,\n            };\n        }\n\n         /**\n         * Load zones\n         */\n        case \"loadZones\": {\n            return {\n                ...state,\n                zones: action.zones,\n            };\n        }\n\n        /**\n         * Save the current state\n         */\n        case \"savePoint\": {\n            return {\n                ...state,\n                // latest wins\n                savePoint: JSON.stringify({...state, savePoint: null}),\n            };\n        }\n\n        /**\n         * Restore from last known state\n         */\n        case \"undo\": {\n            if (state.savePoint == null) { return state; }\n            // @ts-ignore\n            return JSON.parse(state.savePoint);\n        }\n\n        /**\n         * Throw away savepoint\n         */\n        case \"commit\": {\n            return {\n                ...state,\n                savePoint: null,\n            };\n        }\n\n        /**\n         * Set override for given mode\n         */\n        case \"setOverride\": {\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    overrides: {\n                        ...state.plan.overrides,\n                        [OverrideMode[action.mode]]: {\n                            targetTemperature: action.temperature,\n                        },\n                    },\n                },\n            };\n        }\n\n        /**\n         * Clear override for given mode\n         */\n        case \"clearOverride\": {\n            const overrides = state.plan.overrides || {};\n            delete overrides[action.mode];\n            delete overrides[OverrideMode[action.mode]];\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    overrides,\n                },\n            };\n        }\n\n        /**\n         * Set current setPoint state\n         */\n        case \"loadSetPoint\": {\n            return {\n                ...state,\n                setPoint: action.setPoint,\n            };\n        }\n\n        /**\n         * Set start of current setPoint\n         */\n        case \"setStart\": {\n            let date = null;\n            if (typeof action.start === \"string\") {\n                date = new Date(\"1970-01-01T\" + action.start + \"Z\");\n            } else {\n                date = action.start;\n            }\n\n            return {\n                ...state,\n                setPoint: {\n                    ...state.setPoint,\n                    hour: date.getUTCHours(),\n                    minute: date.getUTCMinutes(),\n                },\n            };\n        }\n\n        /**\n         * Set target temperature of current setpoint\n         */\n        case \"setTargetTemperature\": {\n            return {\n                ...state,\n                setPoint: {\n                    ...state.setPoint,\n                    targetTemperature: action.temperature,\n                },\n            };\n        }\n\n        /**\n         * Initialize a new setpoint for the given day\n         */\n        case \"newSetPoint\": {\n            return {\n                ...state,\n                setPoint: {...defaultSetpoint, day: action.day},\n            };\n        }\n\n        /**\n         * Toogle plan enabled\n         */\n        case \"toggleEnabled\": return {\n            ...state,\n            dirty: true,\n            plan: {\n                ...state.plan,\n                enabled: !state.plan.enabled,\n            },\n        };\n\n        /**\n         * Set name of plan\n         */\n        case \"setName\": return {\n            ...state,\n            dirty: true,\n            plan: {\n                ...state.plan,\n                name: action.name,\n            },\n        };\n\n        /**\n         * Set name of plan\n         */\n        case \"setDescription\": return {\n            ...state,\n            dirty: true,\n            plan: {\n                ...state.plan,\n                description: action.description,\n            },\n        };\n\n        /**\n         * Toggle device membership in plan\n         */\n        case \"toggleDevice\": {\n            const devices = state.plan.devices || [];\n\n            if (isEmpty(remove<string>(devices, (d) => d === action.device))) {\n                devices.push(action.device);\n            }\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    devices,\n                },\n            };\n        }\n\n        /**\n         * Toggle zone membership in plan\n         */\n        case \"toggleZone\": {\n            const zones = state.plan.zones || [];\n\n            if (isEmpty(remove<string>(zones, (z) => z === action.zone))) {\n                zones.push(action.zone);\n            }\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    zones,\n                },\n            };\n        }\n\n        /**\n         * Copy day to other days\n         */\n        case \"copyDays\": {\n            const templateDay = filter(state.plan.schedule, (s) => s.day === action.source);\n            const newSchedule = map(state.plan.schedule, (s) => ({ ...s }));\n\n            forEach(action.targets, (target: Day) => {\n                // remove all\n                remove(newSchedule, (old) => old.day === target);\n\n                // new from template\n                forEach(templateDay, (s) => { newSchedule.push({ ...s, day: target }); });\n            });\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    schedule: sortSchedules(newSchedule),\n                },\n            };\n        }\n\n        /**\n         * Add given setpoint to plan\n         */\n        case \"addSetPoint\": {\n            const newList = [...state.plan.schedule];\n            newList.push({ ...action.setPoint, index: -1 });\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    schedule: sortSchedules(newList),\n                },\n            };\n        }\n\n        /**\n         * Update given setpoint in plan\n         */\n        case \"updateSetPoint\": {\n            const newList = [...state.plan.schedule];\n            newList[action.setPoint.index] = action.setPoint;\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    schedule: sortSchedules(newList),\n                },\n            };\n        }\n\n        /**\n         * Remove setpoint\n         */\n        case \"removeSetPoint\": {\n            const newList = [...state.plan.schedule];\n            newList.splice(action.index, 1);\n\n            return {\n                ...state,\n                dirty: true,\n                plan: {\n                    ...state.plan,\n                    schedule: sortSchedules(newList),\n                },\n            };\n        }\n\n        /**\n         * Select day from plan\n         */\n        case \"selectDay\": {\n            return {\n                ...state,\n                selectedDay: calculateDay(state.plan as IHeatingPlan, action.day),\n            };\n        }\n\n        /**\n         * Load plan and set default values\n         */\n        case \"loadPlan\": {\n            return {\n                // we definitly want an unrelated copy of the loaded structure\n                ...JSON.parse(JSON.stringify(state)),\n                loaded: true,\n                dirty: false,\n                plan: {\n                    ...action.plan,\n                    // needs default values\n                    description: action.plan.description,\n                    name: action.plan.name || \"\",\n                    zones: action.plan.zones || [],\n                    devices: action.plan.devices || [],\n                    overrides: action.plan.overrides || {},\n                    schedule: sortSchedules([...action.plan.schedule]),\n                },\n            };\n        }\n\n        default: return state;\n    }\n};\n\nconst loggingReducer = (state: State, action: Action) => {\n    let newState;\n    try {\n        newState = reducerImplementation(state, action);\n        return newState;\n    } finally {\n        // tslint:disable-next-line: no-console\n        console.log(action.type, newState,\n        {\n            action,\n            state,\n        });\n    }\n};\n\nexport const reducer = __PRODUCTION__\n    ? reducerImplementation\n    : loggingReducer;\n","import * as React from \"react\";\n\nimport { Action, initialState, reducer, State } from \"./PlanReducer\";\nconst { createContext, useContext, useReducer } = React;\n\nconst planStateCtx = createContext(initialState);\nconst planDispatchCtx = createContext((() => 0) as React.Dispatch<Action>);\n\nexport const PlanProvider: React.ComponentType = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <planDispatchCtx.Provider value={dispatch}>\n      <planStateCtx.Provider value={state}>\n        {children}\n      </planStateCtx.Provider>\n    </planDispatchCtx.Provider>\n  );\n};\n\nexport const usePlanDispatch = () => {\n  return useContext(planDispatchCtx);\n};\n\nexport const usePlanGlobalState = <K extends keyof State>(property: K) => {\n  const state = useContext(planStateCtx);\n  return state[property]; // only one depth selector for comparison\n};\n","export enum Day {\n    Monday = 1,\n    Tuesday =  2,\n    Wednesday = 3,\n    Thursday = 4,\n    Friday = 5,\n    Saturday = 6,\n    Sunday = 0,\n}\n\nexport enum NormalOperationMode {\n    Automatic = 0,\n}\n\nexport enum OverrideMode {\n    DayAtHome = 1,\n    DayAway = 2,\n    Sleep = 3,\n    Holiday = 4,\n    OutOfSeason = 5,\n}\n\nexport enum ThermostatMode {\n    OverrideDay = 6,\n    FullManual = 7,\n}\n\nexport type OperationMode = NormalOperationMode | OverrideMode;\nexport type AllowedOverrides = OverrideMode | ThermostatMode;\n\nexport interface ITemperatureOverride {\n    targetTemperature: number;\n}\n\nexport interface IExternalReference {\n    id: string;\n    name?: string;\n}\n\nexport interface ISetPoint {\n    day: Day;\n\n    hour: number;\n    minute: number;\n\n    targetTemperature: number;\n}\n\n// & ThermostatMode]\nexport type Overrides =  { [key in keyof typeof OverrideMode]?: ITemperatureOverride };\n\n// defined schedules\n// assignement of schedules to zones\nexport interface IHeatingPlan extends IExternalReference {\n    description?: string;\n    enabled: boolean;\n\n    schedule: ISetPoint[];\n    devices?: string[];\n    zones?: string[];\n\n    overrides?: Overrides;\n    thermostatMode?: ThermostatMode | NormalOperationMode;\n}\n\nexport interface IHeatingDevice extends IExternalReference {\n    icon?: string;\n}\n\nexport interface IHeatingZone extends IExternalReference {\n    icon?: string;\n}\n\nexport interface IScheduleInformation {\n    mode: OperationMode;\n    nextDate?: Date;\n    temperatures: IGroupedCalculatedTemperature[];\n}\n\nexport interface ICalculatedTemperature {\n    device: IHeatingDevice;\n\n    temperature?: number;\n    targetTemperature: number;\n\n    plan: IExternalReference;\n    thermostatMode: ThermostatMode | NormalOperationMode;\n}\n\nexport interface IGroupedCalculatedTemperature extends ICalculatedTemperature {\n    conflictingPlans: IExternalReference[];\n}\n"],"sourceRoot":""}