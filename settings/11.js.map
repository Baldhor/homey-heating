{"version":3,"sources":["webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/Switch/index.js","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/FormControlLabel/index.js","webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/InputContainer.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./components/FormTextField.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./api/settings/index.tsx","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/Switch/Switch.js","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/icons/Cancel.js","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","webpack:///./pages/settings.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_Switch","default","_FormControlLabel","callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","planCopy","zones","length","undefined","devices","id","planAPI","fetchPlans","res","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","position","color","className","variant","noWrap","theme","inputContainer","width","paddingLeft","spacing","unit","paddingRight","createLink","innerRef","to","toString","match","onClick","openURL","component","text","padding","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","elements","type","gutterBottom","map","e","key","disabled","url","otherProps","root","webkitOverflowScrolling","flexFlow","height","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","headline","marginTop","fullWidth","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","settingsAPI","fetchSettings","updateSettings","settings","styles","_extends2","_objectWithoutProperties2","_react","_classnames","_withStyles","_helpers","_SwitchBase","flexShrink","zIndex","verticalAlign","boxShadow","shadows","borderRadius","iconChecked","switchBase","grey","transition","transitions","create","duration","shortest","checked","transform","opacity","colorPrimary","colorSecondary","secondary","common","black","white","bar","top","left","Switch","other","createElement","concat","capitalize","checkedIcon","defaultProps","_default","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","state","setState","failed","setFailed","loadValue","force","set","apiMethod","setStateAction","tryMethod","r","catch","delete","charAt","toUpperCase","slice","usePlans","useDevices","useZones","useScheduleInformation","useSettings","useMode","d","_defineProperty2","_withFormControlContext","_Typography","cursor","WebkitTapHighlightColor","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","label","FormControlLabel","_classNames","classNameProp","control","disabledProp","inputRef","labelPlacement","muiFormControl","onChange","controlProps","forEach","cloneElement","setSettings","loadSettings","isDirty","setDirty","getFieldValue","def","updateField","field","event","target","old","then","_p","enqueueSnackbar","placeholder","required","multiline","rowsMax"],"mappings":"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","file":"11.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Switch.default;\n  }\n});\n\nvar _Switch = _interopRequireDefault(require(\"./Switch\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _FormControlLabel.default;\n  }\n});\n\nvar _FormControlLabel = _interopRequireDefault(require(\"./FormControlLabel\"));","export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    inputContainer: {\n        width: \"100%\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 3,\n    },\n});\n\ntype Props = {\n    children: React.ReactElement<any>,\n} & WithStyles<typeof styles>;\n\nconst InputContainer: React.FunctionComponent<Props> = (props) => {\n    return (<div className={props.classes.inputContainer}>{props.children}</div>);\n};\n\nexport default withStyles(styles)(InputContainer);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    // @ts-ignore\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport InputContainer from \"./InputContainer\";\n\nconst FormTextField = ({ classes, ...otherProps }: TextFieldProps) => {\n    return (\n        <InputContainer>\n            <TextField\n                fullWidth={true}\n                margin=\"normal\"\n                {...otherProps}\n            />\n        </InputContainer>\n    );\n};\n\nexport default FormTextField;\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _SwitchBase = _interopRequireDefault(require(\"../internal/SwitchBase\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 62,\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      // For correct alignment with the text.\n      verticalAlign: 'middle'\n    },\n\n    /* Styles used to create the `icon` passed to the internal `SwitchBase` component `icon` prop. */\n    icon: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied the icon element component if `checked={true}`. */\n    iconChecked: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      padding: 0,\n      height: 48,\n      width: 48,\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {\n      transform: 'translateX(14px)',\n      '& + $bar': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '& + $bar': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '& + $bar': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's disabled class. */\n    disabled: {\n      '& + $bar': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      },\n      '& $icon': {\n        boxShadow: theme.shadows[1]\n      },\n      '&$switchBase': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n        '& + $bar': {\n          backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n        }\n      }\n    },\n\n    /* Styles applied to the bar element. */\n    bar: {\n      borderRadius: 14 / 2,\n      display: 'block',\n      position: 'absolute',\n      zIndex: -1,\n      width: 34,\n      height: 14,\n      top: '50%',\n      left: '50%',\n      marginTop: -7,\n      marginLeft: -17,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Switch(props) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"color\"]);\n  return _react.default.createElement(\"span\", {\n    className: (0, _classnames.default)(classes.root, className)\n  }, _react.default.createElement(_SwitchBase.default, (0, _extends2.default)({\n    type: \"checkbox\",\n    icon: _react.default.createElement(\"span\", {\n      className: classes.icon\n    }),\n    classes: {\n      root: (0, _classnames.default)(classes.switchBase, classes[\"color\".concat((0, _helpers.capitalize)(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    checkedIcon: _react.default.createElement(\"span\", {\n      className: (0, _classnames.default)(classes.icon, classes.iconChecked)\n    })\n  }, other)), _react.default.createElement(\"span\", {\n    className: classes.bar\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * Attributes applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * The value of the component.\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool])\n} : void 0;\nSwitch.defaultProps = {\n  color: 'secondary'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSwitch'\n})(Switch);\n\nexports.default = _default;","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        function loadValue(force: boolean = false) {\n            if (cache.get(name) == null || force) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        loadValue();\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans(force?: boolean): HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withFormControlContext = _interopRequireDefault(require(\"../FormControl/withFormControlContext\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -14,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -14\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\n\nexports.styles = styles;\n\nfunction FormControlLabel(props) {\n  var _classNames;\n\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      labelPlacement = props.labelPlacement,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"muiFormControl\", \"name\", \"onChange\", \"value\"]);\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return _react.default.createElement(\"label\", (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes[\"labelPlacement\".concat((0, _helpers.capitalize)(labelPlacement))], labelPlacement !== 'end'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp)\n  }, other), _react.default.cloneElement(control, controlProps), _react.default.createElement(_Typography.default, {\n    component: \"span\",\n    className: (0, _classnames.default)(classes.label, (0, _defineProperty2.default)({}, classes.disabled, disabled))\n  }, label));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: _propTypes.default.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: _propTypes.default.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: _propTypes.default.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: _propTypes.default.object,\n\n  /*\n   * @ignore\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The value of the component.\n   */\n  value: _propTypes.default.string\n} : void 0;\nFormControlLabel.defaultProps = {\n  labelPlacement: 'end'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiFormControlLabel'\n})((0, _withFormControlContext.default)(FormControlLabel));\n\nexports.default = _default;","import { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { withSnackbar, WithSnackbarProps } from \"notistack\";\nimport React, { ChangeEvent } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { Settings } from \"../../app/services/settings-manager/types\";\nimport { useSettings } from \"../api/hooks\";\nimport { settingsAPI, SettingsHashMap } from \"../api/settings\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport FormTextField from \"../components/FormTextField\";\nimport InputContainer from \"../components/InputContainer\";\nimport { AppMenuButton, MenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n});\n\ntype Params = {\n    id: string;\n};\n\ntype SettingsName = keyof typeof Settings;\ntype Props = WithStyles<typeof styles> & RouteComponentProps<Params> & WithSnackbarProps;\n\nconst SettingsPage: React.FunctionComponent<Props> = (props) => {\n    const { settings, setSettings, loadSettings } = useSettings(true);\n    const [isDirty, setDirty] = React.useState<boolean>(false);\n\n    function getFieldValue(name: SettingsName, def: any = null) {\n        const val = settings[name];\n        return val == null ? def : val;\n    }\n\n    const updateField = (name: SettingsName, field: \"value\" | \"checked\" = \"value\") => (event: ChangeEvent) => {\n        const val = event.target[field];\n\n        setSettings((old) => {\n            return { ...old, [name]: val } as SettingsHashMap;\n        });\n        setDirty(true);\n    };\n\n    const save = () => {\n        settingsAPI.updateSettings(settings).then((_p) => {\n            props.enqueueSnackbar(translate(\"settings.saved\"));\n            setDirty(false);\n        });\n    };\n\n    return (\n        <Page>\n            {{\n                header: (\n                    <AppHeader>\n                        {{\n                            title: translate(\"settings.title\"),\n                            button: (\n                                <React.Fragment>\n                                    {!isDirty && <AppMenuButton />}\n                                    {isDirty &&\n                                        <MenuButton\n                                            first={true}\n                                            onClick={async () => {\n                                                await loadSettings();\n                                                setDirty(false);\n                                            }}\n                                            icon={<CancelIcon />}\n                                        />\n                                    }\n                                </React.Fragment>\n                            ),\n                            actions: (\n                                <React.Fragment>\n                                    {isDirty &&\n                                        <Button color=\"inherit\" onClick={save}>\n                                            save\n                                        </Button>\n                                    }\n                                </React.Fragment>\n                            ),\n                        }}\n                    </AppHeader>\n                ),\n                paddingTop: 50,\n                paddingBottom: 50,\n                body: (\n                    <React.Fragment>\n                        <SubHeader text={translate(\"settings.notifications.category\")} />\n                        <BodyText text={translate(\"settings.notifications.text\")} />\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifyModeChange\", true) === true}\n                                        onChange={updateField(\"NotifyModeChange\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifyModeChange\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifySetError\", true) === true}\n                                        onChange={updateField(\"NotifySetError\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifySetError\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifySetSuccess\", true) === true}\n                                        onChange={updateField(\"NotifySetSuccess\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifySetSuccess\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <SubHeader text={translate(\"settings.sentry.category\")} />\n                        <BodyText text={translate(\"settings.sentry.text\")} />\n\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"SentryEnabled\", true) === true}\n                                        onChange={updateField(\"SentryEnabled\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.enabled.label\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <SubHeader text={translate(\"settings.log.category\")} />\n                        <BodyText text={translate(\"settings.log.text\")} />\n\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"ConsoleReLogEnabled\") === true}\n                                        onChange={updateField(\"ConsoleReLogEnabled\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.enabled.label\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <FormTextField\n                            label={translate(\"settings.category.label\")}\n                            placeholder={translate(\"settings.category.placeholder\")}\n\n                            required={getFieldValue(\"ConsoleReLogEnabled\") === true}\n                            value={getFieldValue(\"ConsoleReLogCategory\", \"\")}\n                            onChange={updateField(\"ConsoleReLogCategory\")}\n                        />\n\n                        <SubHeader text={translate(\"settings.backup.title\")} />\n                        <BodyText text={translate(\"settings.backup.text\")} />\n                        <FormTextField\n                            label={translate(\"settings.backup.label\")}\n                            placeholder={translate(\"settings.backup.placeholder\")}\n\n                            multiline={true}\n                            rowsMax=\"10\"\n\n                            value={getFieldValue(\"Plans\", \"\")}\n                            onChange={updateField(\"Plans\")}\n                        />\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\n// @ts-ignore\nexport default withSnackbar(withRouter(withStyles(styles)(SettingsPage)));\n"],"sourceRoot":""}