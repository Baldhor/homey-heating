{"version":3,"sources":["webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/FormControlLabel/index.js","webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/InputContainer.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./components/FormTextField.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/icons/Cancel.js","webpack:///./api/settings/index.tsx","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:////home/travis/build/mskg/homey-heating/node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","webpack:///./pages/settings.tsx"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","enumerable","get","_FormControlLabel","default","callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","tslib__WEBPACK_IMPORTED_MODULE_0__","undefined","planCopy","assign","zones","length","devices","_callAPI__WEBPACK_IMPORTED_MODULE_2__","id","planAPI","fetchPlans","res","lodash__WEBPACK_IMPORTED_MODULE_1__","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","__webpack_exports__","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","a","createElement","position","color","className","variant","noWrap","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","theme","inputContainer","width","paddingLeft","spacing","unit","paddingRight","createLink","_a","innerRef","tslib_es6","to","toString","match","react_default","onClick","openURL","react_router_dom","components_ListItemLink","index_es","component","Menu_styles","text","padding","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","Menu_default","react_router","styles","elements","type","Translation","Drawer_default","gutterBottom","map","e","key","disabled","url","otherProps","root","webkitOverflowScrolling","flexFlow","height","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","headline","marginTop","react__WEBPACK_IMPORTED_MODULE_2___default","_InputContainer__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1___default","fullWidth","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","_react","_default","d","fill","settingsAPI","fetchSettings","_callAPI__WEBPACK_IMPORTED_MODULE_1__","updateSettings","settings","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","state","setState","failed","setFailed","loadValue","set","apiMethod","setStateAction","tryMethod","r","catch","react","delete","[object Object]","charAt","toUpperCase","slice","usePlans","useDevices","useZones","useScheduleInformation","useSettings","useMode","heating","_extends2","_defineProperty2","_objectWithoutProperties2","_classnames","_withFormControlContext","_withStyles","_Typography","_helpers","cursor","verticalAlign","WebkitTapHighlightColor","marginRight","&$disabled","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","label","FormControlLabel","checked","_classNames","classNameProp","control","disabledProp","inputRef","labelPlacement","muiFormControl","other","onChange","controlProps","forEach","concat","capitalize","cloneElement","defaultProps","notistack__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","setSettings","loadSettings","_api_hooks__WEBPACK_IMPORTED_MODULE_9__","isDirty","setDirty","react__WEBPACK_IMPORTED_MODULE_7___default","getFieldValue","def","updateField","field","event","target","old","_layouts_Page__WEBPACK_IMPORTED_MODULE_18__","_components_AppHeader__WEBPACK_IMPORTED_MODULE_11__","_i18n_Translation__WEBPACK_IMPORTED_MODULE_17__","_components_Menu__WEBPACK_IMPORTED_MODULE_15__","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_api_settings__WEBPACK_IMPORTED_MODULE_10__","then","_p","enqueueSnackbar","_components_SubHeader__WEBPACK_IMPORTED_MODULE_16__","_components_BodyText__WEBPACK_IMPORTED_MODULE_12__","_components_InputContainer__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_4___default","_components_FormTextField__WEBPACK_IMPORTED_MODULE_13__","placeholder","required","multiline","rowsMax"],"mappings":"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","file":"11.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _FormControlLabel.default;\n  }\n});\n\nvar _FormControlLabel = _interopRequireDefault(require(\"./FormControlLabel\"));","export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    inputContainer: {\n        width: \"100%\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 3,\n    },\n});\n\ntype Props = {\n    children: React.ReactElement<any>,\n} & WithStyles<typeof styles>;\n\nconst InputContainer: React.FunctionComponent<Props> = (props) => {\n    return (<div className={props.classes.inputContainer}>{props.children}</div>);\n};\n\nexport default withStyles(styles)(InputContainer);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport InputContainer from \"./InputContainer\";\n\nconst FormTextField = ({ classes, ...otherProps }: TextFieldProps) => {\n    return (\n        <InputContainer>\n            <TextField\n                fullWidth={true}\n                margin=\"normal\"\n                {...otherProps}\n            />\n        </InputContainer>\n    );\n};\n\nexport default FormTextField;\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Cancel');\n\nexports.default = _default;","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        loadValue();\n\n        function loadValue() {\n            if (cache.get(name) == null) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans: HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withFormControlContext = _interopRequireDefault(require(\"../FormControl/withFormControlContext\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -14,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -14\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\n\nexports.styles = styles;\n\nfunction FormControlLabel(props) {\n  var _classNames;\n\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      labelPlacement = props.labelPlacement,\n      muiFormControl = props.muiFormControl,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"muiFormControl\", \"name\", \"onChange\", \"value\"]);\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return _react.default.createElement(\"label\", (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes[\"labelPlacement\".concat((0, _helpers.capitalize)(labelPlacement))], labelPlacement !== 'end'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp)\n  }, other), _react.default.cloneElement(control, controlProps), _react.default.createElement(_Typography.default, {\n    component: \"span\",\n    className: (0, _classnames.default)(classes.label, (0, _defineProperty2.default)({}, classes.disabled, disabled))\n  }, label));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: _propTypes.default.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: _propTypes.default.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: _propTypes.default.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: _propTypes.default.object,\n\n  /*\n   * @ignore\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The value of the component.\n   */\n  value: _propTypes.default.string\n} : void 0;\nFormControlLabel.defaultProps = {\n  labelPlacement: 'end'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiFormControlLabel'\n})((0, _withFormControlContext.default)(FormControlLabel));\n\nexports.default = _default;","import { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { withSnackbar, withSnackbarProps } from \"notistack\";\nimport React, { ChangeEvent } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { Settings } from \"../../app/services/settings-manager/types\";\nimport { useSettings } from \"../api/hooks\";\nimport { settingsAPI, SettingsHashMap } from \"../api/settings\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport FormTextField from \"../components/FormTextField\";\nimport InputContainer from \"../components/InputContainer\";\nimport { AppMenuButton, MenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n});\n\ntype Params = {\n    id: string;\n};\n\ntype SettingsName = keyof typeof Settings;\ntype Props = WithStyles<typeof styles> & RouteComponentProps<Params> & withSnackbarProps;\n\nconst SettingsPage: React.FunctionComponent<Props> = (props) => {\n    const { settings, setSettings, loadSettings } = useSettings(true);\n    const [isDirty, setDirty] = React.useState<boolean>(false);\n\n    function getFieldValue(name: SettingsName, def: any = null) {\n        const val = settings[name];\n        return val == null ? def : val;\n    }\n\n    const updateField = (name: SettingsName, field: \"value\" | \"checked\" = \"value\") => (event: ChangeEvent) => {\n        const val = event.target[field];\n\n        setSettings((old) => {\n            return { ...old, [name]: val } as SettingsHashMap;\n        });\n        setDirty(true);\n    };\n\n    const save = () => {\n        settingsAPI.updateSettings(settings).then((_p) => {\n            props.enqueueSnackbar(translate(\"settings.saved\"));\n            setDirty(false);\n        });\n    };\n\n    return (\n        <Page>\n            {{\n                header: (\n                    <AppHeader>\n                        {{\n                            title: translate(\"settings.title\"),\n                            button: (\n                                <React.Fragment>\n                                    {!isDirty && <AppMenuButton />}\n                                    {isDirty &&\n                                        <MenuButton\n                                            first={true}\n                                            onClick={async () => {\n                                                await loadSettings();\n                                                setDirty(false);\n                                            }}\n                                            icon={<CancelIcon />}\n                                        />\n                                    }\n                                </React.Fragment>\n                            ),\n                            actions: (\n                                <React.Fragment>\n                                    {isDirty &&\n                                        <Button color=\"inherit\" onClick={save}>\n                                            save\n                                        </Button>\n                                    }\n                                </React.Fragment>\n                            ),\n                        }}\n                    </AppHeader>\n                ),\n                paddingTop: 50,\n                paddingBottom: 50,\n                body: (\n                    <React.Fragment>\n                        <SubHeader text={translate(\"settings.notifications.category\")} />\n                        <BodyText text={translate(\"settings.notifications.text\")} />\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifyModeChange\", true) === true}\n                                        onChange={updateField(\"NotifyModeChange\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifyModeChange\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifySetError\", true) === true}\n                                        onChange={updateField(\"NotifySetError\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifySetError\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"NotifySetSuccess\", true) === true}\n                                        onChange={updateField(\"NotifySetSuccess\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.notifications.NotifySetSuccess\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <SubHeader text={translate(\"settings.sentry.category\")} />\n                        <BodyText text={translate(\"settings.sentry.text\")} />\n\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"SentryEnabled\", true) === true}\n                                        onChange={updateField(\"SentryEnabled\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.enabled.label\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <SubHeader text={translate(\"settings.log.category\")} />\n                        <BodyText text={translate(\"settings.log.text\")} />\n\n                        <InputContainer>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={getFieldValue(\"ConsoleReLogEnabled\") === true}\n                                        onChange={updateField(\"ConsoleReLogEnabled\", \"checked\")}\n                                    />\n                                }\n                                label={translate(\"settings.enabled.label\")}\n                                labelPlacement=\"end\"\n                            />\n                        </InputContainer>\n\n                        <FormTextField\n                            label={translate(\"settings.category.label\")}\n                            placeholder={translate(\"settings.category.placeholder\")}\n\n                            required={getFieldValue(\"ConsoleReLogEnabled\") === true}\n                            value={getFieldValue(\"ConsoleReLogCategory\", \"\")}\n                            onChange={updateField(\"ConsoleReLogCategory\")}\n                        />\n\n                        <SubHeader text={translate(\"settings.backup.title\")} />\n                        <BodyText text={translate(\"settings.backup.text\")} />\n                        <FormTextField\n                            label={translate(\"settings.backup.label\")}\n                            placeholder={translate(\"settings.backup.placeholder\")}\n\n                            multiline={true}\n                            rowsMax=\"10\"\n\n                            value={getFieldValue(\"Plans\", \"\")}\n                            onChange={updateField(\"Plans\")}\n                        />\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\n// @ts-ignore\nexport default withSnackbar(withRouter(withStyles(styles)(SettingsPage)));\n"],"sourceRoot":""}